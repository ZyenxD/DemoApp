{"version":3,"sources":["/Users/neycasilla/Development/angular/DemoApp/node_modules/@angular/platform-browser/fesm2015/testing.js"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;AAaA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAqJC,kCAUC","file":"testing.js","sourcesContent":["/**\n * @license Angular v8.0.0\n * (c) 2010-2019 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport { NgZone, ɵglobal, createPlatformFactory, platformCore, NgModule, APP_ID, PLATFORM_INITIALIZER } from '@angular/core';\nimport { ɵgetDOM, BrowserModule, ɵELEMENT_PROBE_PROVIDERS, ɵBrowserDomAdapter } from '@angular/platform-browser';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass BrowserDetection {\n    /**\n     * @private\n     * @return {?}\n     */\n    get _ua() {\n        if (typeof this._overrideUa === 'string') {\n            return this._overrideUa;\n        }\n        return ɵgetDOM() ? ɵgetDOM().getUserAgent() : '';\n    }\n    /**\n     * @return {?}\n     */\n    static setup() { }\n    /**\n     * @param {?} ua\n     */\n    constructor(ua) { this._overrideUa = ua; }\n    /**\n     * @return {?}\n     */\n    get isFirefox() { return this._ua.indexOf('Firefox') > -1; }\n    /**\n     * @return {?}\n     */\n    get isAndroid() {\n        return this._ua.indexOf('Mozilla/5.0') > -1 && this._ua.indexOf('Android') > -1 &&\n            this._ua.indexOf('AppleWebKit') > -1 && this._ua.indexOf('Chrome') == -1 &&\n            this._ua.indexOf('IEMobile') == -1;\n    }\n    /**\n     * @return {?}\n     */\n    get isEdge() { return this._ua.indexOf('Edge') > -1; }\n    /**\n     * @return {?}\n     */\n    get isIE() { return this._ua.indexOf('Trident') > -1; }\n    /**\n     * @return {?}\n     */\n    get isWebkit() {\n        return this._ua.indexOf('AppleWebKit') > -1 && this._ua.indexOf('Edge') == -1 &&\n            this._ua.indexOf('IEMobile') == -1;\n    }\n    /**\n     * @return {?}\n     */\n    get isIOS7() {\n        return (this._ua.indexOf('iPhone OS 7') > -1 || this._ua.indexOf('iPad OS 7') > -1) &&\n            this._ua.indexOf('IEMobile') == -1;\n    }\n    /**\n     * @return {?}\n     */\n    get isSlow() { return this.isAndroid || this.isIE || this.isIOS7; }\n    // The Intl API is only natively supported in Chrome, Firefox, IE11 and Edge.\n    // This detector is needed in tests to make the difference between:\n    // 1) IE11/Edge: they have a native Intl API, but with some discrepancies\n    // 2) IE9/IE10: they use the polyfill, and so no discrepancies\n    /**\n     * @return {?}\n     */\n    get supportsNativeIntlApi() {\n        return !!((/** @type {?} */ (ɵglobal))).Intl && ((/** @type {?} */ (ɵglobal))).Intl !== ((/** @type {?} */ (ɵglobal))).IntlPolyfill;\n    }\n    /**\n     * @return {?}\n     */\n    get isChromeDesktop() {\n        return this._ua.indexOf('Chrome') > -1 && this._ua.indexOf('Mobile Safari') == -1 &&\n            this._ua.indexOf('Edge') == -1;\n    }\n    // \"Old Chrome\" means Chrome 3X, where there are some discrepancies in the Intl API.\n    // Android 4.4 and 5.X have such browsers by default (respectively 30 and 39).\n    /**\n     * @return {?}\n     */\n    get isOldChrome() {\n        return this._ua.indexOf('Chrome') > -1 && this._ua.indexOf('Chrome/3') > -1 &&\n            this._ua.indexOf('Edge') == -1;\n    }\n    /**\n     * @return {?}\n     */\n    get supportsCustomElements() { return (typeof ((/** @type {?} */ (ɵglobal))).customElements !== 'undefined'); }\n    /**\n     * @return {?}\n     */\n    get supportsDeprecatedCustomCustomElementsV0() {\n        return (typeof ((/** @type {?} */ (document))).registerElement !== 'undefined');\n    }\n    /**\n     * @return {?}\n     */\n    get supportsRegExUnicodeFlag() { return RegExp.prototype.hasOwnProperty('unicode'); }\n    /**\n     * @return {?}\n     */\n    get supportsShadowDom() {\n        /** @type {?} */\n        const testEl = document.createElement('div');\n        return (typeof testEl.attachShadow !== 'undefined');\n    }\n    /**\n     * @return {?}\n     */\n    get supportsDeprecatedShadowDomV0() {\n        /** @type {?} */\n        const testEl = (/** @type {?} */ (document.createElement('div')));\n        return (typeof testEl.createShadowRoot !== 'undefined');\n    }\n}\nBrowserDetection.setup();\n/**\n * @return {?}\n */\nfunction createNgZone() {\n    return new NgZone({ enableLongStackTrace: true });\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @return {?}\n */\nfunction initBrowserTests() {\n    ɵBrowserDomAdapter.makeCurrent();\n    BrowserDetection.setup();\n}\n/** @type {?} */\nconst _TEST_BROWSER_PLATFORM_PROVIDERS = [{ provide: PLATFORM_INITIALIZER, useValue: initBrowserTests, multi: true }];\n/**\n * Platform for testing\n *\n * \\@publicApi\n * @type {?}\n */\nconst platformBrowserTesting = createPlatformFactory(platformCore, 'browserTesting', _TEST_BROWSER_PLATFORM_PROVIDERS);\nconst ɵ0 = createNgZone;\n/**\n * NgModule for testing.\n *\n * \\@publicApi\n */\nclass BrowserTestingModule {\n}\nBrowserTestingModule.decorators = [\n    { type: NgModule, args: [{\n                exports: [BrowserModule],\n                providers: [\n                    { provide: APP_ID, useValue: 'a' },\n                    ɵELEMENT_PROBE_PROVIDERS,\n                    { provide: NgZone, useFactory: ɵ0 },\n                ]\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { createNgZone as ɵangular_packages_platform_browser_testing_testing_a, platformBrowserTesting, BrowserTestingModule };\n"]}